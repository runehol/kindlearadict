# README FOR ARAMORPHERCPP
# Note that this file is also used to generate the doxygen documentation main page, and the information below will be
# displayed there.

/**
* \file README
* \brief This file is used by doxygen to generate the main page, and contains an overview of AramorpherCpp. 
*
* \mainpage AramorphCpp
*
* \section what_is What is AramorpherCpp?
*
* AramorpherCpp is a C++ implementation of the Buckwalter Arabic Morphological Analyzer (Version 1.0) by Tim Buckwalter. It is released under the GNU GPL (included).
*
* AramorpherCpp provides two types of functionality. The first is as a stand-alone application. Compile the project using the included Makefile,
* and you can use the resulting binary the same way you use the original aramorph.pl Perl script (BAMA Version 1.0). It has some additional features available, though;
* use the "-h" option to see them. The advantage of using the application rather than the original Perl script (besides the extra features) is, of course, that being
* compiled in C++, it should run much faster.
*
* The second use of AramorpherCpp is as a library to include in your own C++ application. By using the classes contained here, you can create an Arabic morphological analyzer that can be
* loaded into memory and queried from your own code, much more efficiently than relying on a Perl script that must reload all the dictionaries and compatibility tables for each
* file to be analyzed.
*
* \section usage Usage
*
* If you just want a morphological analyzer that duplicates the aramorpher.pl Perl script, run the executable. (The Makefile is set up to generate this by default.)
*
* If you want to write your own C++ application and use Aramorpher methods, then all you have to do is include and compile these files in your project. The API is documented using doxygen.
*
* You can also compile the Aramorpher library as a static or shared library and then link to it. (I have tested this on Windows and Linux; the Makefile isn't set up to do it by default,
* but the procedure should be straightfoward.)
*
* \section reqs Requirements and Dependencies
*
* The public distribution of Aramorpher comes with precompiled binaries for various platforms. In order to compile and use Aramorpher
* yourself, or develop your own applications using this library, a few additional resources will be required.
*
* \subsection bama BAMA Data files
*
* Aramorpher requires the BAMA Version 1.0 data files (dictionaries and compatibility tables). These are not included; they are available for free from the Linguistic Data Consortium:
*
*	http://www.ldc.upenn.edu/Catalog/CatalogEntry.jsp?catalogId=LDC2002L49
*
* By default, Aramorpher assumes the BAMA data files are located in the current directory, but a different directory can be set
* (with the -d option for the executable, or by specifying it in the constructor when creating an Aramorpher object).
*
* \subsection utf8_cpp utf8 cpp library
*
* Aramorpher makes use of the <a href="http://www.codeproject.com/KB/string/utf8cpp.aspx">utf8 cpp library</a>, by Nemanja Trifunovic. This is included.
*
* \subsection boost Boost
*
* Aramorpher makes use of the <a href="http://www.boost.org/">Boost</a> string and regex libraries. Thus, you must have Boost installed on your system (and you will have to set
* the locations appropriately in the Makefile) in order to compile it. The stand-alone executable only requires the Boost DLL/Shared Object file if compiled to use dynamic libraries;
* if compiled to use the Boost static libraries, you only need Boost to compile, but can then distribute the application even to environments without Boost installed.
*
* \section how_does_it_work How does AramorpherCpp Work?
*
* The Arabic morphological analysis is exactly the same as in the original BAMA script, the details of which can be found in that release's documentation.
*
* \section versions Version 1.0 vs. Version 2.0
*
* The Buckwalter Arabic Morphological Analyzer comes in two versions: Version 1.0 and Version 2.0. Version 2.0 has improved analysis capabilities and dictionaries. Both are available
* from the LDC, but unfortunately, only Version 1.0 is free and released under the GNU GPL. Version 2.0 requires an LDC membership, and derivative code is not freely distributable.
*
* Therefore, I am unable to distribute the C++ implementation of BAMA Version 2.0. However, if you have access to BAMA Version 2.0 yourself, you should find that modifying AramorpherCpp to work
* with it is not terribly difficult.
*
* \section documentation Documentation
*
* AramorpherCpp comes with a doxygen configuration file named "Doxyfile." If you run the doxygen tool (available at www.doxygen.org) on this file,
* it will generate a complete API, class diagrams, etc. This README file will become the main page of the documentation.
*
* \section aramorpherpl Aramorpher.pl
*
* As part of this Sourceforge project, I have also created aramorpher.pl, which is just an improved version of the original aramorph.pl Perl script
* (BAMA Version 1.0). It has additional features (also implemented in AramorpherCpp) for those who want to stick with the Perl version.
*
* Questions? Comments? Bugfixes? David Edelstein: amadan@users.sourceforge.net
*
* \author David Edelstein
*/